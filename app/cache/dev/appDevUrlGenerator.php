<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_assetic_35a8e64' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '35a8e64',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/35a8e64.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_35a8e64_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '35a8e64',    'pos' => 0,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/35a8e64_comments_1.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_gestion_actualite_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Ftt\\GestionActualiteBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_gestion_actualite_admin_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\GestionActualiteBundle\\Controller\\ActualiteController::listActualiteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/actualite/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_gestion_actualite_admin_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\GestionActualiteBundle\\Controller\\ActualiteController::deleteActualiteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/actualite/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_gestion_actualite_admin_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\GestionActualiteBundle\\Controller\\ActualiteController::updateActualiteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/actualite/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_gestion_actualite_admin_ajouter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\GestionActualiteBundle\\Controller\\ActualiteController::addActualiteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/actualite/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_gestion_actualite_admin_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\GestionActualiteBundle\\Controller\\ActualiteController::showAdminActualiteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/actualite/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_gestion_actualite_national_front_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\GestionActualiteBundle\\Controller\\ActualiteController::listFrontActualiteNatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/actualite/national',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_gestion_actualite_international_front_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\GestionActualiteBundle\\Controller\\ActualiteController::listFrontActualiteInternatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/actualite/international',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_gestion_actualite_front_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\GestionActualiteBundle\\Controller\\ActualiteController::showFrontActualiteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/actualite/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_newsletter_list_mail' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\NewsletterBundle\\Controller\\NewsletterController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/newsletter/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_newsletter_delete_mail' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\NewsletterBundle\\Controller\\NewsletterController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/newsletter/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_newsletter_add_newsletter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\NewsletterBundle\\Controller\\NewsletterController::addNewsletterMailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/newsletter/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_newsletter_show_newsletter_content' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\NewsletterBundle\\Controller\\NewsletterController::showContentNewsletterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/newsletter/showNewsContent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_newsletter_list_newsletter_content' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\NewsletterBundle\\Controller\\NewsletterController::listContentNewsletterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/newsletter/listNewsContent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_newsletter_delete_newsletter_content' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\NewsletterBundle\\Controller\\NewsletterController::deleteContentNewsletterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/newsletter/deleteNewsContent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_front_newsletter_show_newsletter_content' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\NewsletterBundle\\Controller\\NewsletterController::showContentNewsletterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/showNewsContent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/user/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/user/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/user/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_block' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::blockUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/block',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_activate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::activateUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/activate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\UserController::SearchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/user/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'frontoffice_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\SiteController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contact_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\SiteController::ContactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste_formation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\FormationController::listeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listeformation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inscrire_formation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\InscrirFormationController::inscrirAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inscrire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'club_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\ClubController::listeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formation/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classement_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\ClassementController::classementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/joueur/classement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'match_intern' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\MatchsController::matchinternAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affintern',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reser_tick' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\MatchsController::reservAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reserv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findMatchs' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\MatchsController::findMatchsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/findMatch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ReservTick' => array (  0 =>   array (    0 => 'm',    1 => 'd',    2 => 'id',    3 => 'pd',  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\ReservController::ReservTickAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pd',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'd',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'm',    ),    4 =>     array (      0 => 'text',      1 => '/ReservTick',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'match_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\MatchsController::matchlistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listematch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'terrain_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\MatchsController::terrainlistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listeterrain',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'decrem' => array (  0 =>   array (    0 => 'id',    1 => 'pd',  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\TicketController::decrementeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pd',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/dec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'aff_res' => array (  0 =>   array (    0 => 'log',  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\ReservController::showrAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'log',    ),    1 =>     array (      0 => 'text',      1 => '/aff_res',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'best_player' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\ClassementController::bestplayerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/bestplayer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_resutltat_medical' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\ResultatMedicalController::AjouterResultatMedicalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resultatMedical/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'list_resutltat_medical_ajoute' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\ResultatMedicalController::ResultatsMedicalsDeChaqueMedecinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resultatMedical/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'list_resutltat_medical_pdf' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\FrontOfficeBundle\\Controller\\PDFController::generateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resultatMedical/liste/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\AdminController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_messages_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MessagesController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_messages_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MessagesController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/messages/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_messages_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MessagesController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/messages/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_medecin_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MedecinController::listMedecinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/medecin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_medecin_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MedecinController::addMedecinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/medecin/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_medecin_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MedecinController::updateMedecinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/medecin/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_medecin_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MedecinController::deleteMedecinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/medecin/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ftt_backoffice_medecin_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MedecinController::showMedecinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/medecin/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'terrain' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TerrainController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/terrain/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'terrain_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TerrainController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/terrain',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'terrain_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TerrainController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/terrain/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'terrain_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TerrainController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/terrain/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'terrain_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TerrainController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/terrain',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'terrain_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TerrainController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/terrain',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'terrain_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TerrainController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/terrain',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'terrain_delete2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TerrainController::delete2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/terrain/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'matchs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MatchsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/matchs/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'matchs_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MatchsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/matchs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'matchs_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MatchsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/matchs/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'matchs_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MatchsController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/matchs/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'matchs_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MatchsController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/matchs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'matchs_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MatchsController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/matchs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'matchs_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MatchsController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/matchs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'matchs_delete2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\MatchsController::delete2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/matchs/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\FormationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/formation/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\FormationController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/formation/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\FormationController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/formation/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\FormationController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/formation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\FormationController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/formation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\FormationController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/formation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_delete2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\FormationController::delete2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/formation/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'club' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ClubController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/club/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'club_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ClubController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/club',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'club_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ClubController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/club/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'club_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ClubController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/club/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'club_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ClubController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/club',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'club_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ClubController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/club',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'club_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ClubController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/club',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'club_delete2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ClubController::delete2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/club/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficher_joueur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\GestionJoueurController::afficherJoueurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/joueur/afficherJoueur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout_joueur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\GestionJoueurController::ajouterJoueurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/joueur/ajouterjoueur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifier_joueur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\GestionJoueurController::modifierJoueurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/joueur/modifierjoueur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_joueur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\GestionJoueurController::supprimerJoueurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/joueur/supprimerjoueur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'joueur_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\GestionJoueurController::listeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/joueur/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inscription_liste' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\InscritFormationListController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/liste_insc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'confirmer_formation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\InscritFormationListController::confirmerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/confirmer_formation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'statistique' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TicketController::statistiqueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/stat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paris_affich' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ParisController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/paris/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paris_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ParisController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/paris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paris_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ParisController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/paris/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paris_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ParisController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/paris/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paris_del' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ParisController::deletePAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/del',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/paris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paris_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ParisController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/paris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paris_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ParisController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/paris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paris_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\ParisController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/paris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_affich' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TicketController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ticket/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TicketController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TicketController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ticket/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TicketController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ticket/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_del' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TicketController::deleteTickAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/del',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TicketController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TicketController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Ftt\\BackofficeBundle\\Controller\\TicketController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Ftt\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_new_threads' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::newThreadsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/threads/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_edit_thread_commentable' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::editThreadCommentableAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/commentable/edit',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_new_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::newThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments/new',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_remove_thread_comment' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::removeThreadCommentAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_edit_thread_comment' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::editThreadCommentAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/edit',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_new_thread_comment_votes' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::newThreadCommentVotesAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/votes/new',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_threads' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadsActions',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_post_threads' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::postThreadsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_patch_thread_commentable' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::patchThreadCommentableAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/commentable',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread_comment' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadCommentAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'commentId',    ),    2 =>     array (      0 => 'text',      1 => '/comments',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_patch_thread_comment_state' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::patchThreadCommentStateAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/state',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_put_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::putThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'commentId',    ),    2 =>     array (      0 => 'text',      1 => '/comments',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_post_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::postThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread_comment_votes' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadCommentVotesAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/votes',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_post_thread_comment_votes' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::postThreadCommentVotesAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/votes',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
